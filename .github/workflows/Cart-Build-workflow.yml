# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Cart-Build-workflow

on:
  release:
    types: [created]
  push:
    branches: [ master ]

jobs:

  Scan:
    name: Trivy-Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: change working directory
        run: cd cart
        
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: './cart/trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: './cart/trivy-results.sarif'

  Dpendency-Check:
    name: OWASP Dependency-Check
    needs: Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: change working directory
        run: cd cart

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "cart-service"
          path: "."
          format: "HTML"
          out: "./dependency-check-report.html"

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: Dependency Check Report
          path: ./dependency-check-report.html

  Analysis:
    name: SonarQube-Analysis
    needs: Dpendency-Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Use 'zulu' or 'adopt' if preferred
          java-version: '17'
      
      - name: Verify Java Version
        run: java -version

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=amrkedra
            -Dsonar.projectKey=amrkedra_End-to-End-Kubernetes-Three-Tier-DevSecOps-Project
            -Dsonar.sources=cart
            -Dsonar.verbose=true

  Build:
    name: NPM-Build
    needs: Analysis
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set working directory
        run: cd cart

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
        working-directory: cart

      # - run: npm test
      #   working-directory: cart

  # publish-gpr:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         registry-url: https://npm.pkg.github.com/
          
  #     - run: npm install
  #       working-directory: cart  # Ensures it runs inside cart directory
      
  #     - run: npm publish
  #       working-directory: cart  # Ensures it runs inside cart directory
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  Docker-Build-Push:
    name: Docker-Build-Push
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set working directory
        run: cd cart 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Build Number
        run: echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            amrkedra/cart:${{ env.BUILD_NUMBER }}

      