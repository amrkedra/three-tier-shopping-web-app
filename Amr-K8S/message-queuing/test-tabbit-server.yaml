apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbit-test
  namespace: rabbitmq-system
  labels:
    app: rabbit-test
spec:
  selector:
    matchLabels:
      app: rabbit-test
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rabbit-test
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
      - name: rabbit-test
        image: amrkedra/rabbitmq-tester:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /_status/healthz
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        env:
        - name: RABBIT_HOST
          value: "rabbitmqcluster-server-0"
        - name: RABBIT_PORT
          value: "5672"
        - name: RABBIT_USER
          value: "guest"
        - name: RABBIT_PASSWORD
          value: "guest"
        ports:
        - containerPort: 80
          name: rabbit-test
---

apiVersion: v1
kind: Service
metadata:
  name: test-tabbit-server-service
  namespace: rabbitmq-system
spec:
  selector:
    app: test-tabbit-server
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
